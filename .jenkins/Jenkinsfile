// common lib definition
@Library("OpenEnclaveCommon") _
oe = new jenkins.common.Openenclave()

// Tests running on hardware with custom path to libdcap_quoteprov.so
def ACCTest(String label, String version, String compiler, String build_type) {
    stage("${label} ${compiler} SGX1-FLC ${build_type}") {
        node("${label}") {
            cleanWs()
            checkout scm

            // Generate libdcap_quoteprov.so in the $WORKSPACE/src/Linux folder
            def task = """
                       ./configure
                       make
                       """
            dir("${WORKSPACE}/src/Linux") {
                oe.ContainerRun("az-dcap-tools-${version}", compiler, task)
            }

            // Run hardware tests using custom LD_PRELOAD
            dir("${WORKSPACE}/openenclave") {
                git url: 'https://github.com/Microsoft/openenclave.git'
            }
            def task2 = """
                       cmake ${WORKSPACE}/openenclave -DCMAKE_BUILD_TYPE=${build_type}
                       make
                       ctest --output-on-failure
                       """

            dir("${WORKSPACE}/openenclave/build") {
                withEnv(["LD_LIBRARY_PATH=${WORKSPACE}/src/Linux"]) {
                    oe.Run(compiler, task2, 15)
                }
            }
        }
    }
}

// Test using oetools-test Docker image with /dev/sgx mounted inside container
def ACCContainerTest(String label, String version) {
    stage("Ubuntu${version} Non-Simulation Container SGX1-FLC RelWithDebInfo") {
        node("${label}") {
            cleanWs()
            checkout scm

            // build az-dcap-client deb package
            def task = """
                       dpkg-buildpackage -us -uc
                       """
            dir("${WORKSPACE}/src/Linux") {
                oe.ContainerRun("az-dcap-tools-${version}", 'clang-7', task)
            }

            // Clone openenclave repo
            dir('openenclave') {
                git url: 'https://github.com/Microsoft/openenclave.git'
            }
            /*
            Use oetools-azure Dockerfile from Openenclave repository
            Remove the installed az-dcap-client from the container
            Install az-dcap-client in the container from the deb package we previously built
            */

            def task2 = """
                        apt remove -y az-dcap-client
                        dpkg -i *.deb
                        mkdir -p openenclave/build
                        cd openenclave/build
                        cmake ${WORKSPACE}/openenclave -DCMAKE_BUILD_TYPE=RelWithDebInfo
                        make
                        ctest --output-on-failure
                       """

            dir("${WORKSPACE}/src") {
                timeout(15) {
                    withEnv(["CC=clang-7","CXX=clang++-7"]) {
                        oe.ContainerRun("az-dcap-tools-${version}", 'clang-7', task2, '-u root --device /dev/sgx:/dev/sgx')
                    }
                }
            }
        }
    }
}

def ACCTestOeRelease(String label, String version) {
    stage("OpenEnclave release samples ${label}") {
        node("${label}") {
            cleanWs()
            checkout scm

            // build az-dcap-client deb package
            def task = """
                       dpkg-buildpackage -us -uc
                       """
            dir("${WORKSPACE}/src/Linux") {
                oe.ContainerRun("az-dcap-tools-${version}", 'clang-7', task)
            }

            // Clone openenclave repo
            dir('openenclave') {
                git url: 'https://github.com/Microsoft/openenclave.git'
            }
            /*
            Use oetools-azure Dockerfile from Openenclave repository
            Remove the installed az-dcap-client from the container
            Install az-dcap-client in the container from the deb package we previously built
            then install the open-enclave package and run the samples
            */
            def task2 = """
            apt remove -y az-dcap-client
            dpkg -i *.deb
            apt-get install -y open-enclave
            mkdir -p samples
            cd samples
            cp -r /opt/openenclave/share/openenclave/samples/* .
            . /opt/openenclave/share/openenclaverc && make world
            rm -rf ./samples
            """

            dir("${WORKSPACE}/src") {
                timeout(5) {
                    withEnv(["CC=clang-7","CXX=clang++-7"]) {
                        oe.ContainerRun("az-dcap-tools-${version}", 'clang-7', task2, '-u root --device /dev/sgx:/dev/sgx')
                    }
                }
            }
        }
    }
}

parallel "ACC1604 SGX1-FLC Container RelWithDebInfo" : { ACCContainerTest('ACC-1604', '16.04') },
         "ACC1804 SGX1-FLC Container RelWithDebInfo" : { ACCContainerTest('ACC-1804', '18.04') },
         "ACC1604 SGX1-FLC clang-7 Debug" :            { ACCTest('ACC-1604', '16.04', 'clang-7', 'Debug') },
         "ACC1604 SGX1-FLC clang-7 Release" :          { ACCTest('ACC-1604', '16.04', 'clang-7', 'Release') },
         "ACC1604 SGX1-FLC clang-7 RelWithDebInfo" :   { ACCTest('ACC-1604', '16.04', 'clang-7', 'RelWithDebinfo') },
         "ACC1604 SGX1-FLC gcc Debug" :                { ACCTest('ACC-1604', '16.04', 'gcc', 'Debug') },
         "ACC1604 SGX1-FLC gcc Release" :              { ACCTest('ACC-1604', '16.04', 'gcc', 'Release') },
         "ACC1604 SGX1-FLC gcc RelWithDebInfo" :       { ACCTest('ACC-1604', '16.04', 'gcc', 'RelWithDebInfo') },
         "ACC1804 SGX1-FLC clang-7 Debug" :            { ACCTest('ACC-1804', '18.04', 'clang-7', 'Debug') },
         "ACC1804 SGX1-FLC clang-7 Release" :          { ACCTest('ACC-1804', '18.04', 'clang-7', 'Release') },
         "ACC1804 SGX1-FLC clang-7 RelWithDebInfo" :   { ACCTest('ACC-1804', '18.04', 'clang-7', 'RelWithDebinfo') },
         "ACC1804 SGX1-FLC gcc Debug" :                { ACCTest('ACC-1804', '18.04', 'gcc', 'Debug') },
         "ACC1804 SGX1-FLC gcc Release" :              { ACCTest('ACC-1804', '18.04', 'gcc', 'Release') },
         "ACC1804 SGX1-FLC gcc RelWithDebInfo" :       { ACCTest('ACC-1804', '18.04', 'gcc', 'RelWithDebInfo') },
         "ACC1604 OpenEnclave Release Test" :          { ACCTestOeRelease('ACC-1604','16.04') },
         "ACC1804 OpenEnclave Release Test" :          { ACCTestOeRelease('ACC-1804','18.04') }